---
apiVersion: v1
kind: Namespace
metadata:
  name: spotter-system
  labels:
    name: spotter-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spotter-admission-controller
  namespace: spotter-system
---
# Minimal RBAC - only what's needed for basic operation
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spotter-admission-controller
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spotter-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spotter-admission-controller
subjects:
- kind: ServiceAccount
  name: spotter-admission-controller
  namespace: spotter-system
---
apiVersion: v1
kind: Secret
metadata:
  name: spotter-admission-controller-certs
  namespace: spotter-system
type: kubernetes.io/tls
data:
  # Will be populated by cert generation script
  tls.crt: ""
  tls.key: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spotter-admission-controller-config
  namespace: spotter-system
data:
  config.yaml: |
    server:
      mode: validating
      port: 8443
      min-severity: high
    log-level: debug
    log-format: text
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spotter-admission-controller
  namespace: spotter-system
spec:
  replicas: 1  # Single replica for local testing
  selector:
    matchLabels:
      app: spotter-admission-controller
  template:
    metadata:
      labels:
        app: spotter-admission-controller
    spec:
      serviceAccountName: spotter-admission-controller
      containers:
      - name: admission-controller
        image: spotter:latest
        imagePullPolicy: Never  # Use local image
        command:
        - /spotter
        args:
        - server
        - --config=/etc/spotter/config.yaml
        - --tls-cert-file=/etc/certs/tls.crt
        - --tls-key-file=/etc/certs/tls.key
        ports:
        - name: webhook
          containerPort: 8443
          protocol: TCP
        env:
        - name: SPOTTER_LOG_LEVEL
          value: "info"
        - name: SPOTTER_LOG_FORMAT
          value: "text"
        volumeMounts:
        - name: certs
          mountPath: /etc/certs
          readOnly: true
        - name: config
          mountPath: /etc/spotter
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: certs
        secret:
          secretName: spotter-admission-controller-certs
      - name: config
        configMap:
          name: spotter-admission-controller-config
---
apiVersion: v1
kind: Service
metadata:
  name: spotter-admission-controller
  namespace: spotter-system
spec:
  selector:
    app: spotter-admission-controller
  ports:
  - name: webhook
    port: 443
    targetPort: 8443
    protocol: TCP
  type: ClusterIP
