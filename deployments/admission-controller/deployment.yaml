---
apiVersion: v1
kind: Namespace
metadata:
  name: spotter-system
  labels:
    name: spotter-system
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spotter-admission-controller
  namespace: spotter-system
  labels:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spotter-admission-controller
  labels:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingadmissionwebhooks", "mutatingadmissionwebhooks"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spotter-admission-controller
  labels:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spotter-admission-controller
subjects:
- kind: ServiceAccount
  name: spotter-admission-controller
  namespace: spotter-system
---
apiVersion: v1
kind: Secret
metadata:
  name: spotter-admission-controller-certs
  namespace: spotter-system
  labels:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
type: kubernetes.io/tls
data:
  # These will be generated by cert-manager or manually
  tls.crt: ""
  tls.key: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spotter-admission-controller-config
  namespace: spotter-system
  labels:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
data:
  config.yaml: |
    server:
      mode: validating
      port: 8443
      min-severity: medium
      namespaces: []
      resource-types: []
    log-level: info
    log-format: json
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spotter-admission-controller
  namespace: spotter-system
  labels:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/version: "latest"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: spotter
      app.kubernetes.io/component: admission-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spotter
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/version: "latest"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8443"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: spotter-admission-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: admission-controller
        image: spotter:latest
        imagePullPolicy: Always
        command:
        - ./spotter
        args:
        - server
        - --config=/etc/spotter/config.yaml
        - --tls-cert-file=/etc/certs/tls.crt
        - --tls-key-file=/etc/certs/tls.key
        ports:
        - name: webhook
          containerPort: 8443
          protocol: TCP
        env:
        - name: SPOTTER_LOG_LEVEL
          value: "info"
        - name: SPOTTER_LOG_FORMAT
          value: "json"
        volumeMounts:
        - name: certs
          mountPath: /etc/certs
          readOnly: true
        - name: config
          mountPath: /etc/spotter
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
      volumes:
      - name: certs
        secret:
          secretName: spotter-admission-controller-certs
      - name: config
        configMap:
          name: spotter-admission-controller-config
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: spotter
                  app.kubernetes.io/component: admission-controller
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: spotter-admission-controller
  namespace: spotter-system
  labels:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
spec:
  selector:
    app.kubernetes.io/name: spotter
    app.kubernetes.io/component: admission-controller
  ports:
  - name: webhook
    port: 443
    targetPort: 8443
    protocol: TCP
  type: ClusterIP
