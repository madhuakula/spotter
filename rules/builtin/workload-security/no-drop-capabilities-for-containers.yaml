apiVersion: rules.spotter.run/v1
kind: SecurityRule
metadata:
  name: no-drop-capabilities-for-containers
  labels:
    category: "Workload Security"
    severity: critical
spec:
  id: SPOTTER-WORKLOAD-SECURITY-102
  name: "No Drop Capabilities for Containers"
  version: "1.0.0"
  description: "Containers should explicitly drop all capabilities by default and only add back those that are absolutely necessary."
  severity:
    level: CRITICAL
    score: 9.0
  category: "Workload Security"
  subcategory: "Container Capabilities"
  cwe: "CWE-266"
  regulatoryStandards:
    - name: "CIS Kubernetes Benchmark v1.8.0"
      reference: "https://www.cisecurity.org/benchmark/kubernetes"
      section: "5.2.10"
  match:
    resources:
      kubernetes:
        apiGroups:
          - ""
          - "apps"
        versions:
          - "v1"
        kinds:
          - Pod
          - Deployment
          - StatefulSet
          - DaemonSet
        namespaces:
          include: ["*"]
          exclude: ["kube-system", "kube-public"]
  cel: |
    (object.kind == 'Pod' && has(object.spec.containers) && object.spec.containers.exists(c, !has(c.securityContext) || !has(c.securityContext.capabilities) || !has(c.securityContext.capabilities.drop) || !c.securityContext.capabilities.drop.exists(cap, cap == "ALL"))) ||
    (object.kind != 'Pod' && has(object.spec.template.spec.containers) && object.spec.template.spec.containers.exists(c, !has(c.securityContext) || !has(c.securityContext.capabilities) || !has(c.securityContext.capabilities.drop) || !c.securityContext.capabilities.drop.exists(cap, cap == "ALL")))
  remediation:
    manual: "Add capabilities.drop: [\"ALL\"] to the container's security context."
  references:
    - title: "Kubernetes Pod Security Standards (Restricted)"
      url: "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted"
  metadata:
    author: "Spotter Security Team"
    created: "2025-07-29"