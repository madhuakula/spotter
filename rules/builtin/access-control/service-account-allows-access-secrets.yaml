apiVersion: rules.spotter.run/v1
kind: SecurityRule
metadata:
  name: service-account-allows-access-secrets
  labels:
    category: "Access Control"
    severity: high
spec:
  id: SPOTTER-ACCESS-CONTROL-997
  name: "ServiceAccount Allows Access to Secrets"
  version: "1.0.0"
  description: "A ServiceAccount that has access to secrets can be a security risk if compromised."
  severity:
    level: HIGH
    score: 8.2
  category: "Access Control"
  subcategory: "RBAC Permissions"
  cwe: "CWE-266"
  regulatoryStandards:
    - name: "NIST SP 800-53"
      reference: "https://csrc.nist.gov/publications/detail/sp/800-53/rev-5/final"
      section: "AC-3"
  match:
    resources:
      kubernetes:
        apiGroups:
          - "rbac.authorization.k8s.io"
        versions:
          - "v1"
        kinds:
          - RoleBinding
          - ClusterRoleBinding
        namespaces:
          include: ["*"]
          exclude: ["kube-system", "kube-public"]
  cel: |
    has(object.subjects) &&
    object.subjects.exists(s, s.kind == "ServiceAccount") &&
    has(object.roleRef) &&
    (object.roleRef.name == "cluster-admin" || object.roleRef.name == "admin" || object.roleRef.name == "edit")
  remediation:
    manual: "Avoid binding ServiceAccounts to highly privileged roles like cluster-admin, admin, or edit. Create a dedicated role with the minimum required permissions."
  references:
    - title: "Kubernetes RBAC"
      url: "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
  metadata:
    author: "Spotter Security Team"
    created: "2025-07-30"
