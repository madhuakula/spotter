# ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding resources
# Generated by Spotter - https://github.com/madhuakula/spotter
# Apply these resources to your Kubernetes cluster to enforce Spotter rules natively

# ValidatingAdmissionPolicy: spotter-workload-001.spotter.dev
# Rule: Container Is Privileged
# Description: Containers should not run in privileged mode, as this grants all capabilities to the container and removes all security restrictions.
# Severity: critical
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  annotations:
    spotter.dev/rule-category: workload
    spotter.dev/rule-cwe: CWE-269
    spotter.dev/rule-description: Containers should not run in privileged mode, as
      this grants all capabilities to the container and removes all security restrictions.
    spotter.dev/rule-id: spotter-workload-001
    spotter.dev/rule-severity: critical
    spotter.dev/rule-title: Container Is Privileged
    spotter.dev/rule-version: 1.0.0
  creationTimestamp: null
  name: spotter-workload-001.spotter.dev
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - deployments
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - statefulsets
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - daemonsets
  validations:
  - expression: |
      (object.kind == 'Pod' && (
        (has(object.spec.containers) && object.spec.containers.exists(c, has(c.securityContext) && has(c.securityContext.privileged) && c.securityContext.privileged == true)) ||
        (has(object.spec.initContainers) && object.spec.initContainers.exists(c, has(c.securityContext) && has(c.securityContext.privileged) && c.securityContext.privileged == true))
      )) || (object.kind != 'Pod' && (
        (has(object.spec.template.spec.containers) && object.spec.template.spec.containers.exists(c, has(c.securityContext) && has(c.securityContext.privileged) && c.securityContext.privileged == true)) ||
        (has(object.spec.template.spec.initContainers) && object.spec.template.spec.initContainers.exists(c, has(c.securityContext) && has(c.securityContext.privileged) && c.securityContext.privileged == true))
      ))
    message: Spotter rule 'Container Is Privileged' validation failed
status: {}

---

# ValidatingAdmissionPolicyBinding: spotter-workload-001-binding.spotter.dev
# Binds policy: spotter-workload-001.spotter.dev
# Validation actions: [Deny]
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  annotations:
    spotter.dev/rule-id: spotter-workload-001
  creationTimestamp: null
  name: spotter-workload-001-binding.spotter.dev
  namespace: default
spec:
  matchResources:
    namespaceSelector:
      matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: NotIn
        values:
        - kube-system
        - kube-public
    objectSelector:
      matchExpressions:
      - key: rules.spotter.dev/ignore
        operator: NotIn
        values:
        - "true"
    resourceRules:
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - deployments
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - statefulsets
    - apiGroups:
      - ""
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - daemonsets
  policyName: spotter-workload-001.spotter.dev
  validationActions:
  - Deny
