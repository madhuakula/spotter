- name: insecure sample 1 should fail
  pass: false
  input: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: pod-test-1
    spec:
      containers:
      - name: foobar
        image: foo/bar:latest

- name: insecure sample 2 should fail
  pass: false
  input: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: pod-test-2
      annotations:
        some-annotation: myannotation
    spec:
      containers:
      - name: foobar
        image: foo/bar:latest
- name: insecure sample 3 should fail
  pass: false
  input: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: pod-test-3
      annotations:
        seccomp.security.alpha.kubernetes.io/defaultProfileName: 'rntim/dfl'
    spec:
      containers:
      - name: foobar
        image: foo/bar:latest
- name: insecure sample 4 should fail
  pass: false
  input: |
    apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: hello
    spec:
      schedule: "*/1 * * * *"
      jobTemplate:
        spec:
          template:
            metadata:
              annotations:
                seccomp.security.alpha.kubernetes.io/defaultProfileName: 'rntim/dfl'
            spec:
              containers:
              - name: hello
                image: busybox
                imagePullPolicy: IfNotPresent
                args:
                - /bin/sh
                - -c
                - date; echo Hello from the Kubernetes cluster
              restartPolicy: OnFailure

- name: insecure sample 5 should fail
  pass: false
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 19000
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                allowPrivilegeEscalation: false
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                allowPrivilegeEscalation: false
                seccompProfile:
                    type: RuntimeDefault

- name: insecure sample 6 should fail
  pass: false
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 19000
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                allowPrivilegeEscalation: false
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                allowPrivilegeEscalation: false
                seccompProfile:
                    type: Unconfined

- name: insecure sample 7 should fail
  pass: false
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 19000
            seccompProfile:
                type: RuntimeDefault
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                allowPrivilegeEscalation: false
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                allowPrivilegeEscalation: false
                seccompProfile:
                    type: Unconfined

- name: secure sample 1 should pass
  pass: true
  input: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: pod-test-1
      annotations:
        seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    spec:
      containers:
      - name: foobar
        image: foo/bar:latest

- name: secure sample 2 should pass
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 19000
            seccompProfile:
                type: RuntimeDefault
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                allowPrivilegeEscalation: false
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                allowPrivilegeEscalation: false

- name: secure sample 3 should pass
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 19000
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                allowPrivilegeEscalation: false
                seccompProfile:
                    type: RuntimeDefault
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                allowPrivilegeEscalation: false
                seccompProfile:
                    type: RuntimeDefault