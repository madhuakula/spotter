- name: insecure sample 1 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: security-context-demo-2
    spec:
      securityContext:
        runAsUser: 1000
      containers:
      - name: sec-ctx-demo-2
        image: gcr.io/google-samples/node-hello:1.0
        securityContext:
          runAsUser: 2000
          allowPrivilegeEscalation: false
- name: insecure sample 2 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: security-context-demo-2
    spec:
      securityContext:
        runAsUser: 10
        runAsNonRoot: false
      containers:
        - name: sec-ctx-demo-100
          image: gcr.io/google-samples/node-hello:1.0
          securityContext:
            runAsUser: 333
            runAsNonRoot: false
        - name: sec-ctx-demo-200
          image: gcr.io/google-samples/node-hedwfwllo:1.0
          securityContext:
            runAsUser: 340
            runAsNonRoot: false
- name: insecure sample 3 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: containers-runs-as-root
    spec:
      securityContext:
        runAsNonRoot: false
      containers:
        - name: sec-ctx-demo-100
          image: gcr.io/google-samples/node-hello:1.0
          securityContext:
            runAsUser: 13
            runAsNonRoot: false
- name: insecure sample 4 should fail
  pass: false
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 1200
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                readOnlyRootFilesystem: true
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                readOnlyRootFilesystem: true
- name: insecure sample 5 should fail
  pass: false
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                readOnlyRootFilesystem: true
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                readOnlyRootFilesystem: true
- name: insecure sample 6 should fail
  pass: false
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 12000
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                runAsUser: 1234
                readOnlyRootFilesystem: true
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                runAsUser: 5678
                readOnlyRootFilesystem: true
- name: insecure sample 7 should fail
  pass: false
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                runAsUser: 1234
                readOnlyRootFilesystem: true
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
- name: secure sample 1 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: security-context-demo-2
    spec:
      securityContext:
        runAsUser: 10000
      containers:
        - name: sec-ctx-demo-2
          image: gcr.io/google-samples/node-hello:1.0
          securityContext:
            runAsUser: 10100
            allowPrivilegeEscalation: false
- name: secure sample 2 should pass
  pass: true
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 65532
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                readOnlyRootFilesystem: true
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
- name: secure sample 3 should pass
  pass: true
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: securitydemo
      labels:
        app: web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: web
      template:
        metadata:
          labels:
            app: web
        spec:
          securityContext:
            runAsUser: 19000
          containers:
            - name: frontend
              image: nginx
              ports:
                - containerPort: 80
              securityContext:
                runAsUser: 12000
                readOnlyRootFilesystem: true
            - name: echoserver
              image: k8s.gcr.io/echoserver:1.4
              ports:
                - containerPort: 8080
              securityContext:
                readOnlyRootFilesystem: true
