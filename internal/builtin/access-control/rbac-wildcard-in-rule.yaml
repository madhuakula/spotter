apiVersion: rules.spotter.run/v1
kind: SecurityRule
metadata:
  name: rbac-wildcard-in-rule
  labels:
    category: "Access Control"
    severity: high
spec:
  id: SPOTTER-ACCESS-CONTROL-009
  name: "RBAC Rule Contains Wildcard"
  version: "1.0.0"
  description: "RBAC rules should be specific and avoid using wildcards (*) in resources or verbs, as this can grant excessive permissions."
  severity:
    level: HIGH
    score: 8.5
  category: "Access Control"
  subcategory: "Authorization"
  cwe: "CWE-266"
  regulatoryStandards:
    - name: "CIS Kubernetes Benchmark v1.8.0"
      reference: "https://www.cisecurity.org/benchmark/kubernetes"
      section: "5.1.2"
  match:
    resources:
      kubernetes:
        apiGroups:
          - "rbac.authorization.k8s.io"
        versions:
          - "v1"
        kinds:
          - Role
          - ClusterRole
        namespaces:
          include: ["*"]
          exclude: ["kube-system", "kube-public"]
  cel: |
    has(object.rules) && object.rules.exists(r, 
      (has(r.verbs) && r.verbs.exists(v, v == "*")) || 
      (has(r.resources) && r.resources.exists(res, res == "*")) ||
      (has(r.apiGroups) && r.apiGroups.exists(ag, ag == "*"))
    )
  remediation:
    manual: "Avoid using wildcards in RBAC rules. Instead, explicitly list the required resources and verbs."
  references:
    - title: "Using RBAC Authorization"
      url: "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
  metadata:
    author: "Spotter Security Team"
    created: "2024-07-29"