- name: insecure sample 1 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: security-context-demo
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: sec-ctx-vol
          emptyDir: { }
      containers:
        - name: sec-ctx-demo
          image: busybox
          command: [ "sh", "-c", "sleep 1h" ]
          volumeMounts:
            - name: sec-ctx-vol
              mountPath: /data/demo
          securityContext:
            allowPrivilegeEscalation: false
- name: insecure sample 2 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: security.context.demo
    spec:
      automountServiceAccountToken: true
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: sec-ctx-vol
          emptyDir: { }
      containers:
        - name: sec-ctx-demo
          image: busybox
          command: [ "sh", "-c", "sleep 1h" ]
          volumeMounts:
            - name: sec-ctx-vol
              mountPath: /data/demo
          securityContext:
            allowPrivilegeEscalation: false
- name: insecure sample 3 should fail
  pass: false
  input: |-
    apiVersion: serving.knative.dev/v1
    kind: Configuration
    metadata:
      name: dummy-config
      namespace: knative-sequence
    spec:
      template:
        spec:
          automountServiceAccountToken: true
          securityContext:
            runAsUser: 1000
            runAsGroup: 3000
            fsGroup: 2000
          volumes:
            - name: sec-ctx-vol
              emptyDir: { }
          containers:
            - name: sec-ctx-demo
              image: busybox
              command: [ "sh", "-c", "sleep 1h" ]
              volumeMounts:
                - name: sec-ctx-vol
                  mountPath: /data/demo
              securityContext:
                allowPrivilegeEscalation: false
- name: insecure sample 4 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: redistest-sa
    automountServiceAccountToken: true
- name: insecure sample 5 should fail
  pass: false
  input: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demoenv\n  labels:\n\
    \    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n  template:\n\
    \    metadata:      \n      labels:\n        app: redis\n    spec:\n      serviceAccountName:\
    \ redistest-sa\n      containers:\n      - name: redis\n        image: redis:latest"
- name: secure sample 1 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: security-context-demo
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: sec-ctx-vol
          emptyDir: { }
      containers:
        - name: sec-ctx-demo
          image: busybox
          command: [ "sh", "-c", "sleep 1h" ]
          volumeMounts:
            - name: sec-ctx-vol
              mountPath: /data/demo
          securityContext:
            allowPrivilegeEscalation: false
- name: secure sample 2 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: redistest-sa
    automountServiceAccountToken: false
- name: secure sample 3 should pass
  pass: true
  input: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demoenv\n  labels:\n\
    \    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n  template:\n\
    \    metadata:      \n      labels:\n        app: redis\n    spec:\n      serviceAccountName:\
    \ redistest-sa\n      containers:\n      - name: redis\n        image: redis:latest"
