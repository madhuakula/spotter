- name: insecure sample 1 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.0
          command: ["kube-apiserver"]
          args:
            ["--anonymous-auth=false", "--authorization-mode=MyMode,AlwaysAllow"]
      restartPolicy: OnFailure
- name: insecure sample 2 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.0
          command: ["kube-apiserver", "--authorization-mode=MyMode,AlwaysAllow"]
      restartPolicy: OnFailure
- name: insecure sample 3 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: foo/bar
          command: ["kubelet"]
          args:
            ["--anonymous-auth=false", "--authorization-mode=MyMode,AlwaysAllow"]
      restartPolicy: OnFailure
- name: insecure sample 4 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: foo/bar
          command: ["kubelet", "--authorization-mode=MyMode,AlwaysAllow"]
      restartPolicy: OnFailure
- name: insecure sample 5 should fail
  pass: false
  input: |-
    apiVersion: kubelet.config.k8s.io/v1beta1
    kind: KubeletConfiguration
    address: "192.168.0.8"
    port: 20250
    serializeImagePulls: false
    readOnlyPort: 0
    authentication:
      anonymous:
        enabled: false
    authorization:
      mode: AlwaysAllow
- name: secure sample 1 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.0
          command: ["kube-apiserver"]
          args: ["--authorization-mode=MyMode"]
      restartPolicy: OnFailure
- name: secure sample 2 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.0
          command: ["kube-apiserver", "--authorization-mode=MyMode"]
      restartPolicy: OnFailure
- name: secure sample 3 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: foo/bar
          command: ["kubelet"]
          args: ["--authorization-mode=MyMode"]
      restartPolicy: OnFailure
- name: secure sample 4 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: foo/bar
          command: ["kubelet", "--authorization-mode=MyMode"]
      restartPolicy: OnFailure
- name: secure sample 5 should pass
  pass: true
  input: |-
    apiVersion: kubelet.config.k8s.io/v1beta1
    kind: KubeletConfiguration
    address: "192.168.0.8"
    port: 20250
    serializeImagePulls: false
    readOnlyPort: 0
    authentication:
      anonymous:
        enabled: false
    authorization:
      mode: webhook
