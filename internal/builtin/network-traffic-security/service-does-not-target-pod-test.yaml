- name: insecure sample 1 should fail
  pass: false
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: helloworld3
    spec:
      type: NodePort
      selector:
        app: helloworld3
      ports:
        - name: http
          nodePort: 30475
          port: 9377
          protocol: TCP
          targetPort: 9377

- name: insecure sample 2 should fail
  pass: false
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: helloworld2
    spec:
      type: NodePort
      selector:
        app: helloworld2
      ports:
        - name: http
          nodePort: 30475
          port: 9377
          protocol: TCP
          targetPort: 9377

- name: secure sample 1 should pass
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: helloworld
    spec:
      type: NodePort
      selector:
        app: helloworld
      ports:
        - name: http
          nodePort: 30475
          port: 8089
          protocol: TCP
          targetPort: 8089

- name: secure sample 2 should pass
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: helloworld
    spec:
      type: NodePort
      selector:
        app: helloworld
      ports:
        - name: http
          nodePort: 30475
          port: 8089
          protocol: TCP
          targetPort: 8089

- name: secure sample 3 should pass
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: negative4
    spec:
      selector:
        app: negative4
        tier: backend
      ports:
      - protocol: TCP
        port: 80
        targetPort: http

- name: secure sample 4 should pass
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: negative5
    spec:
      selector:
        app: negative5
        tier: backend
      ports:
      - protocol: TCP
        port: 80

- name: secure sample 5 should pass
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: negative2
    spec:
      type: ClusterIP
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 8080
        - name: health
          port: 8081
          protocol: TCP
          targetPort: 8082
      selector:
        app: negative2

- name: secure sample 6 should pass
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      namespace: kube-system
      name: negative3
    spec:
      type: NodePort
      selector:
        app: negative3
      ports:
        - name: http
          nodePort: 30475
          port: 9377
          protocol: TCP
          targetPort: web
