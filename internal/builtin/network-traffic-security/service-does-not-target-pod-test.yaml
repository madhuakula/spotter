- name: insecure sample 1 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: helloworld2
    spec:
      type: NodePort
      selector:
        app: helloworld2
      ports:
        - name: http
          nodePort: 30475
          port: 9377
          protocol: TCP
          targetPort: 9377
- name: insecure sample 2 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: nginx2
      labels:
        app: hellowwwworld
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 9377
- name: insecure sample 3 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: helloworld3
    spec:
      type: NodePort
      selector:
        app: helloworld3
      ports:
        - name: http
          nodePort: 30475
          port: 9377
          protocol: TCP
          targetPort: 9377
- name: insecure sample 4 should fail
  pass: false
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx-deployment
      labels:
        app: helloworld3
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: helloworld3
      template:
        metadata:
          labels:
            app: helloworld3
        spec:
          containers:
            - name: nginx
              image: nginx:1.14.2
              ports:
                - containerPort: 80
- name: secure sample 1 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: helloworld
    spec:
      type: NodePort
      selector:
        app: helloworld
      ports:
        - name: http
          nodePort: 30475
          port: 8089
          protocol: TCP
          targetPort: 8089
- name: secure sample 2 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: nginx
      labels:
        app: helloworld
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
          - containerPort: 8089
- name: secure sample 3 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: negative2
    spec:
      type: ClusterIP
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 8080
        - name: health
          port: 8081
          protocol: TCP
          targetPort: 8082
      selector:
        app: negative2
- name: secure sample 4 should pass
  pass: true
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: negative2
      labels:
        app: negative2
    spec:
      selector:
        matchLabels:
          app: negative2
      template:
        metadata:
          labels:
            app: negative2
        spec:
          containers:
            - name: webserver
              image: nginx:latest
              ports:
                - containerPort: 8080
                - containerPort: 8082
- name: secure sample 5 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: negative3
    spec:
      type: NodePort
      selector:
        app: negative3
      ports:
        - name: http
          nodePort: 30475
          port: 9377
          protocol: TCP
          targetPort: web
- name: secure sample 6 should pass
  pass: true
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx-deployment
      labels:
        app: negative3
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: negative3
      template:
        metadata:
          labels:
            app: negative3
        spec:
          containers:
            - name: nginx
              image: nginx:1.14.2
              ports:
                - name: web
                  containerPort: 80
- name: secure sample 7 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: negative4
    spec:
      selector:
        app: negative4
        tier: backend
      ports:
      - protocol: TCP
        port: 80
        targetPort: http
- name: secure sample 8 should pass
  pass: true
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: backend
    spec:
      selector:
        matchLabels:
          app: negative4
          tier: backend
          track: stable
      replicas: 3
      template:
        metadata:
          labels:
            app: negative4
            tier: backend
            track: stable
        spec:
          containers:
            - name: negative4
              image: "gcr.io/google-samples/hello-go-gke:1.0"
              ports:
                - name: http
                  containerPort: 80
- name: secure sample 9 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: negative5
    spec:
      selector:
        app: negative5
        tier: backend
      ports:
      - protocol: TCP
        port: 80
- name: secure sample 10 should pass
  pass: true
  input: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: backend
    spec:
      selector:
        matchLabels:
          app: negative5
          tier: backend
          track: stable
      replicas: 3
      template:
        metadata:
          labels:
            app: negative5
            tier: backend
            track: stable
        spec:
          containers:
            - name: negative5
              image: "gcr.io/google-samples/hello-go-gke:1.0"
              ports:
                - name: http
                  containerPort: 80
- name: secure sample 11 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: helloworld
    spec:
      type: NodePort
      selector:
        app: helloworld
      ports:
        - name: http
          nodePort: 30475
          port: 8089
          protocol: TCP
          targetPort: 8089
- name: secure sample 12 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: nginx3
      labels:
        app: helloworld
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
          - containerPort: 808
- name: secure sample 13 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: nginx
      labels:
        app: helloworld
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
          - containerPort: 8089
