apiVersion: rules.spotter.run/v1
kind: SecurityRule
metadata:
  name: etcd-tls-certificate-not-properly-configured
  labels:
    category: "Platform & Infrastructure Security"
    severity: critical
spec:
  id: SPOTTER-PLATFORM-INFRASTRUCTURE-SECURITY-120
  name: "Etcd TLS Certificate Not Properly Configured"
  version: "1.0.0"
  description: "Etcd should be configured with TLS for client and peer communication, and the certificate and key files should be properly set."
  severity:
    level: CRITICAL
    score: 9.8
  category: "Platform & Infrastructure Security"
  subcategory: "Etcd Security"
  cwe: "CWE-295"
  regulatoryStandards:
    - name: "CIS Kubernetes Benchmark v1.8.0"
      reference: "https://www.cisecurity.org/benchmark/kubernetes"
      section: "2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6"
  match:
    resources:
      kubernetes:
        apiGroups:
          - ""
        versions:
          - v1
        kinds:
          - Pod
  cel: |
    has(object.spec.containers) && object.spec.containers.exists(c, has(c.command) && c.command.exists(cmd, cmd == "etcd") && (!has(c.args) || !c.args.exists(arg, arg.startsWith("--cert-file=")) || !c.args.exists(arg, arg.startsWith("--key-file=")) || !c.args.exists(arg, arg.startsWith("--peer-cert-file=")) || !c.args.exists(arg, arg.startsWith("--peer-key-file=")) || !c.args.exists(arg, arg.startsWith("--client-cert-auth=true")) || !c.args.exists(arg, arg.startsWith("--trusted-ca-file=")) || !c.args.exists(arg, arg.startsWith("--peer-client-cert-auth=true")) || !c.args.exists(arg, arg.startsWith("--peer-trusted-ca-file="))))
  remediation:
    manual: "Ensure all necessary TLS flags (`--cert-file`, `--key-file`, `--peer-cert-file`, `--peer-key-file`, `--client-cert-auth=true`, `--trusted-ca-file`, `--peer-client-cert-auth=true`, `--peer-trusted-ca-file`) are properly configured for Etcd."
  references:
    - title: "Etcd Security"
      url: "https://etcd.io/docs/v3.5/op-guide/security/"
  metadata:
    author: "Spotter Security Team"
    created: "2025-07-29"
