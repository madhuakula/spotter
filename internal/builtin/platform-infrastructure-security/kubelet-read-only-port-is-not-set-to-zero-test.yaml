- name: insecure sample 1 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: foo/bar
          command: ["kubelet"]
          args: ["--read-only-port=1"]
      restartPolicy: OnFailure
- name: insecure sample 2 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: foo/bar
          command: ["kubelet", "--read-only-port=1"]
      restartPolicy: OnFailure
- name: insecure sample 3 should fail
  pass: false
  input: |-
    apiVersion: kubelet.config.k8s.io/v1beta1
    kind: KubeletConfiguration
    address: "192.168.0.8"
    port: 20250
    serializeImagePulls: false
    evictionHard:
      memory.available: "200Mi"
    readOnlyPort: 1
- name: secure sample 1 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: kubelet-demo
      labels:
        purpose: kubelet-demo
    spec:
      containers:
        - name: kubelet-demo-container
          image: foo/bar
          command: ["kubelet"]
          args: ["--read-only-port=0"]
      restartPolicy: OnFailure
- name: secure sample 2 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: foo/bar
          command: ["kubelet", "--read-only-port=0"]
      restartPolicy: OnFailure
- name: secure sample 3 should pass
  pass: true
  input: |-
    apiVersion: kubelet.config.k8s.io/v1beta1
    kind: KubeletConfiguration
    address: "192.168.0.8"
    port: 20250
    serializeImagePulls: false
    evictionHard:
      memory.available: "200Mi"
    readOnlyPort: 0
