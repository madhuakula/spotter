- name: insecure sample 1 should fail
  pass: false
  input: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: database\nspec:\n\
    \  selector:\n    matchLabels:\n      app: database\n      version: v1\n  replicas:\
    \ 1\n  template:\n    metadata:\n      labels:\n        app: database\n      \
    \  version: v1\n    spec:\n      serviceAccountName: database\n      containers:\n\
    \      - name: database\n        image: gcr.io/google_containers/kube-apiserver:certification\n\
    \        imagePullPolicy: IfNotPresent\n        command: [\"etcd\"]\n        args:\
    \ [\"--trusted-ca-file=/etc/env/valid3.pem\"]\n      nodeSelector:\n        kubernetes.io/hostname:\
    \ worker02  \n    restartPolicy: OnFailure"
- name: insecure sample 2 should fail
  pass: false
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.0
          command: ["kube-apiserver"]
          args: ["--client-ca-file=/etc/env/valid3.pem"]
      restartPolicy: OnFailure
- name: secure sample 1 should pass
  pass: true
  input: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: command-demo
      labels:
        purpose: demonstrate-command
    spec:
      containers:
        - name: command-demo-container
          image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.0
          command: ["kube-apiserver"]
          args: ["--client-ca-file=/etc/env/valid.pem"]
      restartPolicy: OnFailure
- name: secure sample 2 should pass
  pass: true
  input: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: database\nspec:\n\
    \  selector:\n    matchLabels:\n      app: database\n      version: v1\n  replicas:\
    \ 1\n  template:\n    metadata:\n      labels:\n        app: database\n      \
    \  version: v1\n    spec:\n      serviceAccountName: database\n      containers:\n\
    \      - name: database\n        image: gcr.io/google_containers/kube-apiserver:certification\n\
    \        imagePullPolicy: IfNotPresent\n        command: [\"etcd\"]\n        args:\
    \ [\"--trusted-ca-file=/etc/env/valid2.pem\"]\n      nodeSelector:\n        kubernetes.io/hostname:\
    \ worker02  \n    restartPolicy: OnFailure"
