apiVersion: rules.spotter.run/v1
kind: SecurityRule
metadata:
  name: audit-log-maxbackup-not-properly-set
  labels:
    category: "Audit, Logging & Compliance"
    severity: medium
spec:
  id: SPOTTER-AUDIT-102
  name: "Audit Log Maxbackup Not Properly Set"
  version: "1.0.0"
  description: "The audit log maxbackup should be set to a reasonable value to retain an appropriate number of old log files."
  severity:
    level: MEDIUM
    score: 5.0
  category: "Audit, Logging & Compliance"
  subcategory: "Auditing"
  cwe: "CWE-778"
  regulatoryStandards:
    - name: "CIS Kubernetes Benchmark v1.8.0"
      reference: "https://www.cisecurity.org/benchmark/kubernetes"
      section: "3.2.1"
  match:
    resources:
      kubernetes:
        apiGroups:
          - ""
          - serving.knative.dev
        versions:
          - v1
        kinds:
          - Pod
          - Configuration
          - Revision
  cel: |
    has(object.spec.containers) && object.spec.containers.exists(c,
      has(c.command) && c.command.exists(cmd, cmd == "kube-apiserver") &&
      (
        // Check if audit-log-maxbackup is not set in args or command, or is set to a value < 10
        (
          (!has(c.args) || !c.args.exists(arg, arg.startsWith("--audit-log-maxbackup="))) &&
          (!has(c.command) || !c.command.exists(cmd, cmd.startsWith("--audit-log-maxbackup=")))
        ) ||
        (
          has(c.args) && c.args.exists(arg, arg.startsWith("--audit-log-maxbackup=") && int(arg.split("=")[1]) < 10)
        ) ||
        (
          has(c.command) && c.command.exists(cmd, cmd.startsWith("--audit-log-maxbackup=") && int(cmd.split("=")[1]) < 10)
        )
      )
    )
  remediation:
    manual: "Set the `--audit-log-maxbackup` flag for the kube-apiserver to a value of at least 10."
  references:
    - title: "Kubernetes Auditing"
      url: "https://kubernetes.io/docs/tasks/debug/debug-cluster/audit/"
  metadata:
    author: "Spotter Security Team"
    created: "2025-07-30"
